1. Насчет анализа структуры БД.
* Поля create_at нужно сделать обязательными
* В сообщения к постам можно добавить поле "Родитель", тогда древовидный чат получится )
* В постах не хватает фотографий(карусели). Самое простое - сделать многие ко многим ПостФото.

2-3 https://github.com/pasgeekbrains/data-engineer.git папка task3 дамп dmpSnet.sql
* Первое что бросилось в глаза - слово медиафайлы. Вместо таблицы photos сделал похожую files, где дополнительно добавил обязательный столбец "Тип Файла" {photo, music, video}
* По поводу лайков. Варианта 3:
- Первый это сделать 3-и таблицы лайков для каждой сущности: посты, медиа, пользователь. 
     Из плюсов - составной PK и наличие FK. 
     Из минусов - эти таблицы будут абсолютно похожи. Если в будущем придется вносить изменения в лайки, придется делать это в 3-х таблицах
- Второй способ - сделать одну таблицу, где будут столбцы ТипЛайка {Пост,Медиа,Пользователь} и ИсточникЛайка. 
     Из плюсов составной PK(Юзер, ТипЛайка, ИсточникЛайка). 
     Из минусов отсутствие FK, что может привести к потере целостности в базе.
- Третий способ, который я выбрал - одна таблица, поля ссылающиеся на посты, медиа и пользователя. Т.к. null<>null, сделал 3-и составных unicode. 
     Из плюсов - наличие FK -ев. 
     Из минусов - отсутствие not null в полях {Пост,Медиа,Пользователь}. 
  Т.о. работать с этой таблицей желательно через хранимую процедуру, которая д.б. учитывать эть нюансы )